{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","cn","completed","title","TodoList","todos","map","getUser","userId","usersFromServer","find","App","useState","setTitle","setUser","todosState","setTodosState","titleError","setTitleError","userError","setUserError","onSubmit","event","preventDefault","hasError","trim","selectedUser","newTodo","updatedTodos","push","addTodo","Math","max","htmlFor","type","value","placeholder","onChange","target","disabled","users","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc9c8072.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo = ({ user }: Props) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo = ({ todo }: Props) => {\n  const className = cn({\n    TodoInfo: true,\n    'TodoInfo--completed': todo.completed,\n  });\n\n  return (\n    <article className={className} data-id={todo.id}>\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        todo={todo}\n        key={todo.id}\n      />\n    ))}\n  </section>\n);\n","import './App.scss';\n\nimport { FormEventHandler, useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState('');\n  const [todosState, setTodosState] = useState(todos);\n  const [titleError, setTitleError] = useState('');\n  const [userError, setUserError] = useState('');\n\n  function addTodo(newTodo: Todo) {\n    const updatedTodos = [...todosState];\n\n    updatedTodos.push(newTodo);\n\n    setTodosState(updatedTodos);\n  }\n\n  const handleSubmit: FormEventHandler = (event) => {\n    event.preventDefault();\n\n    let hasError = false;\n\n    if (title.trim() === '') {\n      setTitleError('Please enter a title');\n      hasError = true;\n    } else {\n      setTitleError('');\n    }\n\n    if (user === '') {\n      setUserError('Please choose a user');\n      hasError = true;\n    } else {\n      setUserError('');\n    }\n\n    if (hasError) {\n      return;\n    }\n\n    const selectedUser = getUser(+user);\n\n    const maxId = Math.max(...todosState.map(todo => todo.id));\n    const newId = maxId + 1;\n\n    const newTodo = {\n      id: newId,\n      title,\n      completed: false,\n      userId: +user,\n      user: selectedUser,\n    };\n\n    addTodo(newTodo);\n\n    setTitle('');\n    setUser('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">Add todo form</h1>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            Title:\n          </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"title\"\n            name=\"title\"\n            value={title}\n            placeholder=\"Enter a title\"\n            onChange={(event) => {\n              setTitle(event.target.value);\n              if (titleError) {\n                setTitleError('');\n              }\n            }}\n          />\n          {titleError && <span className=\"error\">{titleError}</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">\n            User:\n          </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            name=\"user\"\n            value={user}\n            onChange={(event) => {\n              setUser(event.target.value);\n              if (userError) {\n                setUserError('');\n              }\n            }}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n            {usersFromServer.map((users) => (\n              <option key={users.id} value={users.id}>{users.name}</option>\n            ))}\n          </select>\n\n          {userError && <span className=\"error\">{userError}</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todosState} />\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}